{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ICHIGOz\\\\react-native-firebase-crud\\\\screens\\\\AddUserScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firebase from \"../database/firebaseDb\";\nimport { ThemeProvider, Button, Input, Image } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar AddUserScreen = function (_Component) {\n  _inherits(AddUserScreen, _Component);\n\n  var _super = _createSuper(AddUserScreen);\n\n  function AddUserScreen() {\n    var _this;\n\n    _classCallCheck(this, AddUserScreen);\n\n    _this = _super.call(this);\n\n    _this.inputValueUpdate = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.dbRef = firebase.firestore().collection('react-native-crud');\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      mobile: \"\",\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(AddUserScreen, [{\n    key: \"storeUser\",\n    value: function storeUser() {\n      var _this2 = this;\n\n      if (this.state.name == '') {\n        alert('Fill at least your name!');\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        this.dbRef.add({\n          name: this.state.name,\n          email: this.state.email,\n          mobile: this.state.mobile\n        }).then(function (res) {\n          _this2.setState({\n            name: '',\n            email: '',\n            mobile: '',\n            isLoading: false\n          });\n\n          _this2.props.navigation.navigate('UserScreen');\n        }).catch(function (err) {\n          console.log('Error found: ', err);\n\n          _this2.setState({\n            isLoading: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: 'https://camo.githubusercontent.com/057b6ae5408b97072f6a1846a4dcf2f6f9d7022a/68747470733a2f2f63646e2e7261776769742e636f6d2f6c7563617362656e746f2f72656163742d6e61746976652d616374696f6e732f6d61737465722f636f6d6d6f6e2f6d656469612f6c6f676f2e706e67'\n        },\n        style: {\n          width: 200,\n          height: 200\n        },\n        containerStyle: {\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        leftIcon: React.createElement(Icon, {\n          name: \"user-o\",\n          size: 20,\n          color: \"#0085E6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }),\n        placeholder: '  Name',\n        value: this.state.name,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'name');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        leftIcon: React.createElement(Icon, {\n          name: \"envelope-o\",\n          size: 20,\n          color: \"#0085E6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }\n        }),\n        placeholder: '  Email',\n        value: this.state.email,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'email');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        leftIcon: React.createElement(Icon, {\n          name: \"mobile\",\n          size: 30,\n          color: \"#0085E6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }\n        }),\n        placeholder: '  Mobile',\n        value: this.state.mobile,\n        onChangeText: function onChangeText(val) {\n          return _this3.inputValueUpdate(val, 'mobile');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }), React.createElement(Button, {\n        icon: React.createElement(Icon, {\n          name: \"check\",\n          size: 15,\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }\n        }),\n        title: \"  Add User\",\n        buttonStyle: {\n          backgroundColor: \"green\"\n        },\n        onPress: function onPress() {\n          return _this3.storeUser();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }), React.createElement(Button, {\n        icon: React.createElement(Icon, {\n          name: \"users\",\n          size: 15,\n          color: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }\n        }),\n        title: \"  Go to User List\",\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('UserScreen');\n        },\n        containerStyle: {\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return AddUserScreen;\n}(Component);\n\nvar theme = {\n  Button: {\n    raised: true\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  preloader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default AddUserScreen;","map":{"version":3,"sources":["C:/Users/ICHIGOz/react-native-firebase-crud/screens/AddUserScreen.js"],"names":["React","Component","firebase","ThemeProvider","Button","Input","Image","Icon","AddUserScreen","inputValueUpdate","val","prop","state","setState","dbRef","firestore","collection","name","email","mobile","isLoading","alert","add","then","res","props","navigation","navigate","catch","err","console","log","styles","preloader","theme","container","uri","width","height","marginLeft","marginRight","backgroundColor","storeUser","marginTop","raised","StyleSheet","create","flex","padding","position","top","left","right","bottom","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { StyleSheet, ScrollView, ActivityIndicator, View, Text } from 'react-native'\r\nimport firebase from '../database/firebaseDb'\r\nimport { ThemeProvider, Button, Input, Image } from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\n\r\n\r\nclass AddUserScreen extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.dbRef = firebase.firestore().collection('react-native-crud');\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            mobile: \"\",\r\n            isLoading: false\r\n        }\r\n\r\n    }\r\n\r\n    inputValueUpdate = (val, prop) => {\r\n        const state = this.state;\r\n        state[prop] = val;\r\n        this.setState(state);\r\n    }\r\n\r\n    storeUser() {\r\n        if (this.state.name == '') {\r\n            alert('Fill at least your name!');\r\n        } else {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            this.dbRef.add({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                mobile: this.state.mobile\r\n            }).then((res) => {\r\n                this.setState({\r\n                    name: '',\r\n                    email: '',\r\n                    mobile: '',\r\n                    isLoading: false\r\n                })\r\n                this.props.navigation.navigate('UserScreen');\r\n            })\r\n            .catch((err) => {\r\n                console.log('Error found: ', err);\r\n                this.setState({\r\n                    isLoading: false\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={styles.preloader}>\r\n                    <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <ThemeProvider theme={theme}>\r\n                <ScrollView style={styles.container}>\r\n                    <Image \r\n                        source={{ uri: 'https://camo.githubusercontent.com/057b6ae5408b97072f6a1846a4dcf2f6f9d7022a/68747470733a2f2f63646e2e7261776769742e636f6d2f6c7563617362656e746f2f72656163742d6e61746976652d616374696f6e732f6d61737465722f636f6d6d6f6e2f6d656469612f6c6f676f2e706e67'}}\r\n                        style={{ width: 200, height: 200 }}\r\n                        containerStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\r\n                    />\r\n                    <Input \r\n                        leftIcon={\r\n                            <Icon \r\n                                name='user-o'\r\n                                size={20}\r\n                                color='#0085E6'\r\n                            />\r\n                        }\r\n                        placeholder={'  Name'}\r\n                        value={this.state.name}\r\n                        onChangeText={(val) => this.inputValueUpdate(val, 'name')}\r\n                    />\r\n                    <Input \r\n                        leftIcon={\r\n                            <Icon \r\n                                name='envelope-o'\r\n                                size={20}\r\n                                color='#0085E6'\r\n                            />\r\n                        }\r\n                        placeholder={'  Email'}\r\n                        value={this.state.email}\r\n                        onChangeText={(val) => this.inputValueUpdate(val, 'email')}\r\n                    />\r\n                    <Input \r\n                        leftIcon={\r\n                            <Icon \r\n                                name='mobile'\r\n                                size={30}\r\n                                color='#0085E6'\r\n                            />\r\n                        }\r\n                        placeholder={'  Mobile'}\r\n                        value={this.state.mobile}\r\n                        onChangeText={(val) => this.inputValueUpdate(val, 'mobile')}\r\n                    />\r\n                    <Button \r\n                        icon={\r\n                            <Icon \r\n                                name='check'\r\n                                size={15}\r\n                                color='white'\r\n                            />\r\n                        }\r\n                        title='  Add User'\r\n                        buttonStyle={{\r\n                            backgroundColor: \"green\"\r\n                        }}\r\n                        onPress={() => this.storeUser()}\r\n                    />\r\n                    <Button \r\n                        icon={\r\n                            <Icon \r\n                                name='users'\r\n                                size={15}\r\n                                color='white'\r\n                            />\r\n                        }\r\n                        title='  Go to User List'\r\n                        onPress={() => this.props.navigation.navigate('UserScreen')}\r\n                        containerStyle={{\r\n                            marginTop: 10\r\n                        }}\r\n                    />\r\n                </ScrollView>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst theme = {\r\n    Button: {\r\n        raised: true\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 35\r\n    },\r\n    preloader: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\nexport default AddUserScreen;"]},"metadata":{},"sourceType":"module"}