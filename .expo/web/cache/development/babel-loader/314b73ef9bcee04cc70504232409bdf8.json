{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ICHIGOz\\\\react-native-firebase-crud\\\\screens\\\\UserScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ListItem, Badge } from 'react-native-elements';\nimport firebase from \"../database/firebaseDb\";\n\nvar UserScreen = function (_Component) {\n  _inherits(UserScreen, _Component);\n\n  var _super = _createSuper(UserScreen);\n\n  function UserScreen() {\n    var _this;\n\n    _classCallCheck(this, UserScreen);\n\n    _this = _super.call(this);\n\n    _this.getCollection = function (querySnapShot) {\n      var userArr = [];\n      querySnapShot.forEach(function (res) {\n        var _res$data = res.data(),\n            name = _res$data.name,\n            email = _res$data.email,\n            mobile = _res$data.mobile;\n\n        userArr.push({\n          key: res.id,\n          res: res,\n          name: name,\n          email: email,\n          mobile: mobile\n        });\n      });\n\n      _this.setState({\n        userArr: userArr,\n        isLoading: false\n      });\n    };\n\n    _this.firestoreRef = firebase.firestore().collection('react-native-crud');\n    _this.state = {\n      isLoading: true,\n      userArr: []\n    };\n    return _this;\n  }\n\n  _createClass(UserScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, this.state.userArr.map(function (item, i) {\n        return React.createElement(ListItem, {\n          key: i,\n          bottomDivider: true,\n          onPress: function onPress() {\n            _this2.props.navigation.navigate('UserDetailScreen', {\n              userKey: item.key\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }, React.createElement(Badge, {\n          value: i + 1,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }\n        }), React.createElement(ListItem.Content, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }\n        }, React.createElement(ListItem.Title, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }\n        }, item.name), React.createElement(ListItem.Subtitle, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }\n        }, item.email)), React.createElement(ListItem.Chevron, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return UserScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  preloader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default UserScreen;","map":{"version":3,"sources":["C:/Users/ICHIGOz/react-native-firebase-crud/screens/UserScreen.js"],"names":["React","Component","ListItem","Badge","firebase","UserScreen","getCollection","querySnapShot","userArr","forEach","res","data","name","email","mobile","push","key","id","setState","isLoading","firestoreRef","firestore","collection","state","unsubscribe","onSnapshot","styles","preloader","map","item","i","props","navigation","navigate","userKey","StyleSheet","create","position","top","left","right","bottom","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { StyleSheet, ScrollView, ActivityIndicator, View, Text } from 'react-native'\r\nimport { ListItem, Badge } from 'react-native-elements'\r\nimport firebase from '../database/firebaseDb'\r\n\r\nclass UserScreen extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.firestoreRef = firebase.firestore().collection('react-native-crud');\r\n        this.state = {\r\n            isLoading: true,\r\n            userArr: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe();\r\n    }\r\n\r\n    getCollection = (querySnapShot) => {\r\n        const userArr = [];\r\n        querySnapShot.forEach((res) => {\r\n            const { name, email, mobile } = res.data();\r\n            userArr.push({\r\n                key: res.id,\r\n                res,\r\n                name,\r\n                email,\r\n                mobile\r\n            })\r\n        })\r\n        this.setState({\r\n            userArr,\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={styles.preloader}>\r\n                    <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <ScrollView>\r\n                {\r\n                    this.state.userArr.map((item, i) => {\r\n                        return (\r\n                            <ListItem\r\n                                key={i}\r\n                                bottomDivider\r\n                                onPress={() => {\r\n                                    this.props.navigation.navigate('UserDetailScreen', {\r\n                                        userKey: item.key\r\n                                    })\r\n                                }}\r\n                            >   \r\n                                <Badge \r\n                                    value={i+1}\r\n                                />\r\n                                <ListItem.Content>\r\n                                    <ListItem.Title>{item.name}</ListItem.Title>\r\n                                    <ListItem.Subtitle>{item.email}</ListItem.Subtitle>\r\n                                </ListItem.Content>\r\n                                <ListItem.Chevron/>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    preloader: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\nexport default UserScreen;"]},"metadata":{},"sourceType":"module"}