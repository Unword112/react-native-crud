{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ICHIGOz\\\\react-native-firebase-crud\\\\screens\\\\UserDetailScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from \"../database/firebaseDb\";\nimport { ThemeProvider, Button, Input, Image } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar UserDetailScreen = function (_Component) {\n  _inherits(UserDetailScreen, _Component);\n\n  var _super = _createSuper(UserDetailScreen);\n\n  function UserDetailScreen() {\n    var _this;\n\n    _classCallCheck(this, UserDetailScreen);\n\n    _this = _super.call(this);\n\n    _this.inputValueUpdate = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.openTwoButtonAlert = function () {\n      Alert.alert('Delete User', 'Are you sure?', [{\n        text: 'Yes',\n        onPress: function onPress() {\n          return _this.deleteUser();\n        }\n      }, {\n        text: 'No',\n        onPress: function onPress() {\n          return console.log('No item was removed');\n        },\n        style: 'cancel'\n      }], {\n        cancelable: true\n      });\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      mobile: '',\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(UserDetailScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var dbRef = firebase.firestore().collection('react-native-crud').doc(this.props.route.params.userKey);\n      dbRef.get().then(function (res) {\n        if (res.exists) {\n          var user = res.data();\n\n          _this2.setState({\n            key: res.id,\n            name: user.name,\n            email: user.email,\n            mobile: user.mobile,\n            isLoading: false\n          });\n        } else {\n          console.log('Document does not exist!');\n        }\n      });\n    }\n  }, {\n    key: \"updateUser\",\n    value: function updateUser() {\n      var _this3 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var updateDBRef = firebase.firestore().collection('react-native-crud').doc(this.state.key);\n      updateDBRef.set({\n        name: this.state.name,\n        email: this.state.email,\n        mobile: this.state.mobile\n      }).then(function (docRef) {\n        _this3.setState({\n          key: '',\n          name: '',\n          email: '',\n          mobile: '',\n          isLoading: false\n        });\n\n        _this3.props.navigation.navigate('UserScreen');\n      }).catch(function (err) {\n        console.error('Error:', err), _this3.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser() {\n      var _this4 = this;\n\n      var dbRef = firebase.firestore().collection('react-native-crud').doc(this.props.route.params.userKey);\n      dbRef.delete().then(function (res) {\n        console.log(\"Item removed from database\");\n\n        _this4.props.navigation.navigate('UserScreen');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, React.createElement(Input, {\n        placeholder: 'Name',\n        value: this.state.name,\n        onChangeText: function onChangeText(val) {\n          return _this5.inputValueUpdate(val, 'name');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: 'Email',\n        value: this.state.email,\n        onChangeText: function onChangeText(val) {\n          return _this5.inputValueUpdate(val, 'email');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: 'Mobile',\n        value: this.state.mobile,\n        onChangeText: function onChangeText(val) {\n          return _this5.inputValueUpdate(val, 'mobile');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }), React.createElement(Button, {\n        icon: React.createElement(Icon, {\n          name: \"wrench\",\n          size: 15,\n          color: \"#fff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }\n        }),\n        title: \"  Update\",\n        onPress: function onPress() {\n          return _this5.updateUser();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }), React.createElement(Button, {\n        icon: React.createElement(Icon, {\n          name: \"trash\",\n          size: 15,\n          color: \"#fff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }\n        }),\n        title: \"  Delete\",\n        containerStyle: {\n          marginTop: 10\n        },\n        buttonStyle: {\n          backgroundColor: \"red\"\n        },\n        onPress: this.openTwoButtonAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return UserDetailScreen;\n}(Component);\n\nvar theme = {\n  Button: {\n    raised: true\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  preloader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default UserDetailScreen;","map":{"version":3,"sources":["C:/Users/ICHIGOz/react-native-firebase-crud/screens/UserDetailScreen.js"],"names":["React","Component","firebase","ThemeProvider","Button","Input","Image","Icon","UserDetailScreen","inputValueUpdate","val","prop","state","setState","openTwoButtonAlert","Alert","alert","text","onPress","deleteUser","console","log","style","cancelable","name","email","mobile","isLoading","dbRef","firestore","collection","doc","props","route","params","userKey","get","then","res","exists","user","data","key","id","updateDBRef","set","docRef","navigation","navigate","catch","err","error","delete","styles","preloader","theme","container","updateUser","marginTop","backgroundColor","raised","StyleSheet","create","flex","padding","position","top","left","right","bottom","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { StyleSheet, ScrollView, ActivityIndicator, View, Text, Alert } from 'react-native'\r\nimport firebase from '../database/firebaseDb'\r\nimport { ThemeProvider, Button, Input, Image } from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\n\r\nclass UserDetailScreen extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            mobile: '',\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dbRef = firebase.firestore().collection('react-native-crud').doc(this.props.route.params.userKey);\r\n        dbRef.get().then((res) => {\r\n            if (res.exists) {\r\n                const user = res.data();\r\n                this.setState({\r\n                    key: res.id,\r\n                    name: user.name,\r\n                    email: user.email,\r\n                    mobile: user.mobile,\r\n                    isLoading: false\r\n                })\r\n            } else {\r\n                console.log('Document does not exist!');\r\n            }\r\n        })\r\n    }\r\n\r\n    inputValueUpdate = (val, prop) => {\r\n        const state = this.state;\r\n        state[prop] = val;\r\n        this.setState(state);\r\n    }\r\n\r\n    updateUser() {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        const updateDBRef = firebase.firestore().collection('react-native-crud').doc(this.state.key);\r\n        updateDBRef.set({\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            mobile: this.state.mobile,\r\n        }).then((docRef) => {\r\n            this.setState({\r\n                key: '',\r\n                name: '',\r\n                email: '',\r\n                mobile: '',\r\n                isLoading: false\r\n            })\r\n            this.props.navigation.navigate('UserScreen');\r\n        })\r\n        .catch((err) => {\r\n            console.error('Error:', err),\r\n            this.setState({\r\n                isLoading: false,\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteUser() {\r\n        const dbRef = firebase.firestore().collection('react-native-crud').doc(this.props.route.params.userKey);\r\n        dbRef.delete().then((res) => {\r\n            console.log(\"Item removed from database\");\r\n            this.props.navigation.navigate('UserScreen');\r\n        })\r\n    }\r\n\r\n    openTwoButtonAlert = () => {\r\n        Alert.alert(\r\n            'Delete User',\r\n            'Are you sure?',\r\n            [\r\n                {text: 'Yes', onPress: () => this.deleteUser()},\r\n                {text: 'No', onPress: () => console.log('No item was removed'), style: 'cancel'}\r\n            ],\r\n            {\r\n                cancelable: true\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <View style={styles.preloader}>\r\n                    <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return(\r\n            <ThemeProvider theme={theme}>\r\n                <ScrollView style={styles.container}>\r\n                    <Input \r\n                        placeholder={'Name'}\r\n                        value={this.state.name}\r\n                        onChangeText={(val) => this.inputValueUpdate(val, 'name')}\r\n                    />\r\n                    <Input \r\n                        placeholder={'Email'}\r\n                        value={this.state.email}\r\n                        onChangeText={(val) => this.inputValueUpdate(val, 'email')}\r\n                    />\r\n                    <Input \r\n                        placeholder={'Mobile'}\r\n                        value={this.state.mobile}\r\n                        onChangeText={(val) => this.inputValueUpdate(val, 'mobile')}\r\n                    />\r\n                    <Button \r\n                        icon={\r\n                            <Icon \r\n                                name=\"wrench\"\r\n                                size={15}\r\n                                color=\"#fff\"\r\n                            />\r\n                        }\r\n                        title='  Update'\r\n                        onPress={() => this.updateUser()}\r\n                    />\r\n                    <Button \r\n                        icon={\r\n                            <Icon \r\n                                name=\"trash\"\r\n                                size={15}\r\n                                color=\"#fff\"\r\n                            />\r\n                        }\r\n                        title='  Delete'\r\n                        containerStyle={{\r\n                            marginTop: 10\r\n                        }}\r\n                        buttonStyle={{\r\n                            backgroundColor: \"red\"\r\n                        }}\r\n                        onPress={this.openTwoButtonAlert}\r\n                    />\r\n                </ScrollView>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst theme = {\r\n    Button: {\r\n        raised: true\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 35\r\n    },\r\n    preloader: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\nexport default UserDetailScreen;"]},"metadata":{},"sourceType":"module"}